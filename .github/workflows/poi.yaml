name: POI Pipeline
on:
  push:
    branches:
      - feature_*
    paths:
      - apis/poi/**
      - .github/**
  pull_request:
    branches:
      - develop
    paths:
      - apis/poi/**
jobs:
  Build_POI_API:
    runs-on: ubuntu-latest
    env: 
      ACR_URL: openhackfho408g7acr.azurecr.io
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '3.1.x'
      - name: Add Code Coverage Tools
        working-directory: apis/poi/tests/UnitTests
        run: dotnet add package coverlet.msbuild
      - name: Install dependencies
        run: dotnet restore
        working-directory: apis/poi
      - name: Build
        run: dotnet build --no-restore
        working-directory: apis/poi
      - name: Test with the dotnet CLI
        run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov
        working-directory: apis/poi
      - name: code coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
      - if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Error in build',
              body: body
            })
      - name: Login to Azure
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build and push to Docker
        run: |
          docker build . -t ${{ env.ACR_URL }}/devopsoh/api-poi:${{github.run_number}} --file Dockerfile
          docker push ${{ env.ACR_URL }}/devopsoh/api-poi:${{github.run_number}}
        working-directory: apis/poi
