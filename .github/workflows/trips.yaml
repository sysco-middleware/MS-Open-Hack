name: Trips API
on:
  push:
    branches:
      - feature_*
    paths:
      - apis/trips/**
      - .github/**
  pull_request:
    branches:
      - develop
    paths:
      - apis/trips/**
jobs:
  Build_TRIPS_API:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Run Go from CLI
        run: go run main.go
        working-directory: apis/trips
      - name: Generate coverage report
        run: go test `go list ./... | grep -v examples` -coverprofile=coverage.txt -covermode=atomic
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: apis/trips/tests/UnitTests/lcov/coverage.info
      - if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Error in build',
              body: body
            })
      - name: Login to Azure
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build and push to Docker
        run: |
          docker build . -t ${{ env.ACR_URL }}/devopsoh/api-trips:${{github.run_number}} --file Dockerfile
          docker push ${{ env.ACR_URL }}/devopsoh/api-trips:${{github.run_number}}
        working-directory: apis/trips
